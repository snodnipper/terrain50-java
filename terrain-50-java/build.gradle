apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = 'hello.HelloTerrain50'
version =  '0.1.0'
//version =  '0.1.0-SNAPSHOT'
group = 'uk.co.ordnancesurvey.api'

// tag::repositories[]
repositories {
    mavenLocal()
    mavenCentral()
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'elevation'
    version =  '0.1.0'
    //version =  '0.1.0-SNAPSHOT'
}
// end::jar[]

compileJava {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

// tag::dependencies[]
dependencies {
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.google.guava:guava:18.0'
    compile 'org.mozilla:rhino:1.7R4'
    testCompile 'junit:junit:4.11'
}
// end::dependencies[]

// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
// end::wrapper[]

/**
 * Note: to upload the archive the developer must specify the username and password in their gradle
 * properties file:
 *    ~/.gradle/gradle.properties
 *       mavenUser=admin
 *       mavenPassword=myAdminPassword
 *
 * Alternative: it is possible to pass in a property to the build like the following.
 *
 *    ./gradle uploadArchives -PsonatypeUsername=MysticalDeployer -PsonatypePassword=password1
 *
 *    authentication(userName: project.hasProperty("sonatypeUsername") ?
 *              project.sonatypeUsername : null, password: project.hasProperty("sonatypePassword") ?
 *              project.sonatypePassword : null)
 *
 */
uploadArchives {

    repositories.mavenDeployer {
        /* TODO:
        beforeDeployment { MavenDeployment deployment ->
            signing.signPom(deployment)
        }*/

        repository (url: "http://lv515:8081/nexus/content/repositories/releases") {
            authentication (userName: mavenUser, password: mavenPassword)
        }
        snapshotRepository (url: "http://lv515:8081/nexus/content/repositories/snapshots") {
            authentication (userName: mavenUser, password: mavenPassword)
        }

        pom.project {
            name 'OS Java Elevation API'
            packaging 'jar'
            description 'Simple API to access datasets such as terrain 50'
            delegate.url 'http://www.ordnancesurvey.co.uk/business-and-government/products/terrain-50.html'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm {
                delegate.url 'scm:git@github.com:snodnipper/terrain50-java.git'
                connection 'scm:git@github.com:snodnipper/terrain50-java.git'
                developerConnection 'scm:git@github.com:snodnipper/terrain50-java.git'
            }

            developers {
                developer {
                    id 'snodnipper'
                    name 'Snodnipper'
                }
                developer {
                    id 'Meez_Rose'
                    name 'Emelia Szor'
                }
            }
        }
    }
}